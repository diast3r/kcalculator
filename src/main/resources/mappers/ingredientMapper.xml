<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kcalculator.user.ingredient.mapper.IngredientMapper">

	<!-- NOTE db에서 ingredient_processed와 ingredient_raw를 합친다면 쓸 것. -->
	<!-- <resultMap id="ingredient" type="com.kcalculator.user.ingredient.dto.IngredientDTO">
		<id column="id" property="id" />
		<result column="food_code" property="foodCode" />
		<result column="food_name" property="foodName" />
		<result column="calorie_per_100" property="caloriePer100" />
		<result column="carbohydrates_per_100" property="carbohydratesPer100" />
		<result column="protein_per_100" property="proteinPer100" />
		<result column="fat_per_100" property="fatPer100" />
	</resultMap>
	
	<resultMap id="processedIngredient" extends="ingredient" 
	type="com.kcalculator.user.ingredient.dto.ProcessedIngredientDTO">
		<result column="product_code" property="productCode" />
		<result column="net_weight" property="netWeight" />
		<result column="serving_size" property="servingSize" />
		<result column="manufacturer" property="manufacturer" />
	</resultMap>
	
	<resultMap id="rawIngredient" extends="ingredient" 
	type="com.kcalculator.user.ingredient.dto.RawIngredientDTO">
	</resultMap> -->
	
	<select id="selectProcessedIngredientListByIdList" parameterType="list" 
	resultType="com.kcalculator.user.ingredient.dto.ProcessedIngredientDTO">
		SELECT
			*
		FROM
			`ingredient_processed`
		WHERE
			`id` IN
			(
			<foreach item="id" collection="list" separator=",">
				#{id}
			</foreach>
			)
	</select>
	
	<select id="selectRawIngredientListByIdList" parameterType="list" 
	resultType="com.kcalculator.user.ingredient.dto.RawIngredientDTO">
		SELECT
			*
		FROM
			`ingredient_raw`
		WHERE
			`id` IN
			(
			<foreach item="id" collection="list" separator=",">
				#{id}
			</foreach>
			)
	</select>
	
	
	<!-- 상품명, 제조사명으로 가공식품 검색 -->
	<select id="selectProcessedIngredientListMatchFoodNameAndManufacturer" parameterType="string" resultType="com.kcalculator.user.ingredient.dto.ProcessedIngredientDTO">
		SELECT
			`id`
			,`food_code`
			,`food_name`
			,`product_code`
			<!-- NOTE 가공식품 데이터에 상품 중량이 필요한가? -->
			,`net_weight`
			,`calorie_per_100`
			,`carbohydrates_per_100`
			,`protein_per_100`
			,`fat_per_100`
			,`serving_size`
			,`manufacturer`
		FROM
			`ingredient_processed`
		WHERE
			MATCH(`food_name`, `manufacturer`) AGAINST(#{keyword} IN BOOLEAN MODE)
	</select>
	
	<!-- 식품명으로 원재료 검색 -->
	<select id="selectRawIngredientListMatchFoodName" parameterType="string" resultType="com.kcalculator.user.ingredient.dto.RawIngredientDTO">
		SELECT
			`id`
			,`food_code`
			,`food_name`
			,`calorie_per_100`
			,`carbohydrates_per_100`
			,`protein_per_100`
			,`fat_per_100`
		FROM
			`ingredient_raw`
		WHERE
			MATCH(`food_name`) AGAINST(#{keyword} IN BOOLEAN MODE)
	</select>
	
	<!-- 내 재료(원재료/가공)에서 검색 -->
	<select id="selectMyIngredientListMatchFoodName" parameterType="int" resultType="com.kcalculator.user.ingredient.dto.MyCustomIngredientDTO">
		SELECT
			`id`
			,`user_id`
			,`food_name`
			,`net_weight`
			,`calorie`
			,`carbohydrates`
			,`protein`
			,`fat`
		FROM
			`ingredient_mine`
		WHERE
			`user_id` = #{userId} AND
			MATCH(`food_name`) AGAINST(#{keyword} IN BOOLEAN MODE)
	</select>
	
	<!-- 내 재료(커스텀)전부 가져오기 -->
	<select id="selectMyCustomIngredientList" parameterType="int" resultType="com.kcalculator.user.ingredient.dto.MyCustomIngredientDTO">
		SELECT
			`id`
			,`user_id`
			,`food_name`
			,`net_weight`
			,`calorie`
			,`carbohydrates`
			,`protein`
			,`fat`
		FROM
			`ingredient_mine_custom`
		WHERE
			`user_id` = #{userId}
	</select>
	
	<!-- 내 재료(원재료/가공)정보 전부 가져오기 -->
	<select id="selectMyIngredientList" parameterType="int" resultType="com.kcalculator.user.ingredient.dto.MyIngredientDTO">
		SELECT
			`id`
			,`ingredient_id`
			,`user_id`
			,`type`
		FROM
			`ingredient_mine`
		WHERE
			`user_id` = #{userId}
	</select>
	
	<!-- 내 재료(원재료/가공) 등록 -->
	<insert id="insertMyIngredient" parameterType="map">
		INSERT INTO `ingredient_mine`
		(
			`user_id`
			,`ingredient_id`
			,`type`
		)
		VALUES
		(
			#{userId}
			,#{ingredientId}
			,#{type}
		)
	</insert>
	
	<insert id="insertMyCustomIngredient" parameterType="map">
		INSERT INTO `ingredient_mine_custom`
		(
			`user_id`
			,`food_name`
			,`net_weight`
			,`calorie`
			,`carbohydrates`
			,`protein`
			,`fat`
		)
		VALUES
		(
			#{userId}
			,#{foodName}
			,#{netWeight}
			,#{calorie}
			,#{carbohydrates}
			,#{protein}
			,#{fat}
		)
	</insert>
	
</mapper>